<!-- ReSharper disable Xaml.RedundantResource -->
<local:GeneralWindow x:Class="LogViewer.ViewerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:ui="clr-namespace:AdonisUI;assembly=AdonisUI"
        xmlns:uiCt="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
        xmlns:uiExt="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
        xmlns:local="clr-namespace:LogViewer"
        xmlns:prop="clr-namespace:LogViewer.Properties"
        mc:Ignorable="d"
        uiExt:CursorSpotlightExtension.MaxBlurRadius="64"
        uiExt:CursorSpotlightExtension.RelativeSpotlightSize="0.5"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        WindowStartupLocation="CenterScreen"
        MinHeight="600" MinWidth="900" Height="600" Width="900">
    
    <Window.Resources>
        
        <local:ItemExistenceConverter x:Key="LevelHasBackgroundConverter">
            <system:String>Notice</system:String>
            <system:String>Warning</system:String>
            <system:String>Error</system:String>
        </local:ItemExistenceConverter>
        <local:ResourceKeyConverter x:Key="ShowLevelKeyConverter" Prefix="ShowLevel"/>
        <local:ResourceKeyConverter x:Key="ShowModuleKeyConverter" Prefix="ShowModule"/>
        
        <system:Boolean x:Key="ShowLevelNull">True</system:Boolean>
        <system:Boolean x:Key="ShowLevelTrace">True</system:Boolean>
        <system:Boolean x:Key="ShowLevelDev">True</system:Boolean>
        <system:Boolean x:Key="ShowLevelDebug">True</system:Boolean>
        <system:Boolean x:Key="ShowLevelInfo">True</system:Boolean>
        <system:Boolean x:Key="ShowLevelNotice">True</system:Boolean>
        <system:Boolean x:Key="ShowLevelWarning">True</system:Boolean>
        <system:Boolean x:Key="ShowLevelError">True</system:Boolean>
        
    </Window.Resources>
    
    <DockPanel Background="{StaticResource Background}">
        
        <!-- menu bar -->
        <Menu DockPanel.Dock="Top" Background="{StaticResource MenuBarBackground}">
        
            <Menu.Resources>
                <CornerRadius x:Key="{x:Static ui:Dimensions.CornerRadius}">0</CornerRadius>
            </Menu.Resources>
            
            <MenuItem Header="{x:Static prop:R.MenuFile}">
                <MenuItem Header="{x:Static prop:R.OptionOpen}" Click="MenuItemOpenFile_OnClick"/>
                <MenuItem Header="{x:Static prop:R.OptionConnect}" Click="MenuItemConnect_OnClick"/>
                <MenuItem Header="{x:Static prop:R.OptionOpenRecent}" Click="MenuItemOpenRecent_OnClick"/>
                <MenuItem Header="{x:Static prop:R.OptionSave}" Click="MenuItemSave_OnClick" x:Name="MenuItemSave" IsEnabled="False"/>
                <MenuItem Header="{x:Static prop:R.OptionSaveAll}" Click="MenuItemSaveAll_OnClick"/>
                <MenuItem Header="{x:Static prop:R.OptionSaveCopy}" Click="MenuItemSaveCopy_OnClick" x:Name="MenuItemSaveCopy" IsEnabled="False"/>
                <Separator/>
                <MenuItem Header="{x:Static prop:R.OptionSettings}" Click="MenuItemOpenSettings_OnClick"/>
                <Separator/>
                <MenuItem Header="{x:Static prop:R.OptionExit}" Click="MenuItemExit_OnClick"/>
            </MenuItem>
            
            <MenuItem Header="{x:Static prop:R.MenuEdit}">
                <MenuItem Header="{x:Static prop:R.OptionSelectAll}"/>
                <MenuItem Header="{x:Static prop:R.OptionCopy}"/>
                <Separator/>
                <MenuItem Header="{x:Static prop:R.OptionScrollToTop}" Command="{Binding ScrollToTop}"/>
                <MenuItem Header="{x:Static prop:R.OptionScrollToBottom}" Command="{Binding ScrollToBottom}"/>
                <Separator/>
                <MenuItem Header="{x:Static prop:R.OptionFind}"/>
                <MenuItem Header="{x:Static prop:R.OptionReplace}"/>
                <Separator/>
                <MenuItem Header="{x:Static prop:R.HeaderLogLevel}" Tag="L" Click="MenuItemResetFilters_OnClick">
                    <MenuItem Header="{x:Static prop:R.OptionShowAll}" Tag="S"/>
                    <MenuItem Header="{x:Static prop:R.OptionHideAll}" Tag="H"/>
                </MenuItem>
                <MenuItem Header="{x:Static prop:R.HeaderShowModules}" Tag="M" Click="MenuItemResetFilters_OnClick">
                    <MenuItem Header="{x:Static prop:R.OptionShowAll}" Tag="S"/>
                    <MenuItem Header="{x:Static prop:R.OptionHideAll}" Tag="H"/>
                </MenuItem>
            </MenuItem>
            
            <MenuItem Header="{x:Static prop:R.MenuWindow}">
                <MenuItem Header="{x:Static prop:R.OptionShowMainWindow}" Click="MenuItemShowMainWindow_OnClick"/>
                <MenuItem Header="{x:Static prop:R.OptionAllWindows}" Click="MenuItemAllWindows_OnClick" ItemsSource="{Binding Source={x:Static local:App.ViewerIdentifiers}}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Style.Triggers>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource EqualityConverter}">
                                            <Binding/>
                                            <Binding RelativeSource="{RelativeSource AncestorType=local:ViewerWindow}" Path="Identifier"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="IsChecked" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static prop:R.OptionWindowMaximize}" Click="MenuItemMaximize_OnClick"/>
                <MenuItem Header="{x:Static prop:R.OptionWindowMinimize}" Click="MenuItemMinimize_OnClick"/>
                <MenuItem Header="{x:Static prop:R.OptionWindowCloseCurrent}" ToolTip="{x:Static prop:R.OptionWindowCloseCurrentTip}" Click="MenuItemCloseCurrentWindow_OnClick"/>
                <MenuItem Header="{x:Static prop:R.OptionWindowCloseAll}" ToolTip="{x:Static prop:R.OptionWindowCloseAllTip}" Click="MenuItemCloseAllWindow_OnClick"/>
            </MenuItem>
            
            <MenuItem Header="{x:Static prop:R.MenuHelp}">
                <MenuItem Header="{x:Static prop:R.OptionRepository}" Click="MenuItemBrowseRepository_OnClick"/>
                <MenuItem Header="{x:Static prop:R.OptionAbout}" Click="MenuItemShowAbout_OnClick"/>
            </MenuItem>
            
        </Menu>
        
        <DockPanel Margin="{StaticResource GlobalMargin}">
        
            <!-- left side -->
            <DockPanel DockPanel.Dock="Left" Width="180">
                
                <local:BorderCard DockPanel.Dock="Top">
                    <StackPanel x:Name="LevelTogglesContainer">
                        
                        <StackPanel.Resources>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                <Setter Property="Content" Value="{Binding Tag, RelativeSource={RelativeSource Self}}"/>
                                <Setter Property="Foreground" Value="{local:ResourceBinding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushKeyConverter}}"/>
                                <Setter Property="IsChecked" Value="{local:ResourceBinding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ShowLevelKeyConverter}}"/>
                                <EventSetter Event="Click" Handler="ToggleButtonLevels_OnHandler"/>
                            </Style>
                        </StackPanel.Resources>
                        
                        <Label Content="{x:Static prop:R.HeaderLogLevel}" FontWeight="Bold"/>
                        
                        <ToggleButton Tag="Null" Content="{x:Static prop:R.ToggleDefaultContent}"/>
                        <ToggleButton Tag="Trace"/>
                        <ToggleButton Tag="Dev"/>
                        <ToggleButton Tag="Debug"/>
                        <ToggleButton Tag="Info"/>
                        <ToggleButton Tag="Notice"/>
                        <ToggleButton Tag="Warning"/>
                        <ToggleButton Tag="Error"/>
                        
                    </StackPanel>
                </local:BorderCard>
                
                <local:BorderCard>
                    <DockPanel>
                        
                        <Label DockPanel.Dock="Top" Content="{x:Static prop:R.HeaderShowModules}" FontWeight="Bold"/>
                        
                        <ItemsControl x:Name="ModuleTogglesContainer" ItemsSource="{Binding Modules}" ScrollViewer.CanContentScroll="True" VirtualizingPanel.ScrollUnit="Pixel">
                            
                            <ItemsControl.Template>
                                <ControlTemplate TargetType="ItemsControl">
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Vertical" Margin="-3"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ToggleButton Content="{Binding}" Tag="{Binding}" IsChecked="{local:ResourceBinding Converter={StaticResource ShowModuleKeyConverter}}" Click="ToggleButtonModules_OnClick"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            
                        </ItemsControl>
                        
                    </DockPanel>
                </local:BorderCard>
                
            </DockPanel>
    
            <!-- right side -->
            <DockPanel>
                
                <local:BorderCard DockPanel.Dock="Bottom">
                    <StackPanel Orientation="Horizontal" Margin="{StaticResource GlobalMargin}">
                        
                        <uiCt:SplitButton MinWidth="120" HorizontalContentAlignment="Center" Command="{Binding ToggleEnableAutoScroll}">
                            
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#x2713;" Visibility="{Binding EnableAutoScroll, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <TextBlock Text="{x:Static prop:R.ToggleAutoScroll}"/>
                            </StackPanel>
                            
                            <uiCt:SplitButton.SplitMenu>
                                <ContextMenu>
                                    <MenuItem Header="{x:Static prop:R.ButtonScrollToTop}" Command="{Binding ScrollToTop}"/>
                                    <MenuItem Header="{x:Static prop:R.ButtonScrollToBottom}" Command="{Binding ScrollToBottom}"/>
                                </ContextMenu>
                            </uiCt:SplitButton.SplitMenu>
                            
                        </uiCt:SplitButton>
                        
                    </StackPanel>
                </local:BorderCard>
                
                <local:BorderCard>
                    <ItemsControl x:Name="LogContainer" ItemsSource="{Binding Logs}" ScrollViewer.CanContentScroll="True" VirtualizingPanel.ScrollUnit="Pixel" VirtualizingStackPanel.VirtualizationMode="Recycling">
                        
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <ScrollViewer x:Name="PART_ScrollViewerLogs">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Padding="2" Margin="0,1" CornerRadius="4">
                                    
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Level, Converter={StaticResource LevelHasBackgroundConverter}}" Value="True">
                                                    <Setter Property="Background" Value="{local:ResourceBinding Level, Converter={StaticResource BrushOpacityKeyConverter}}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    
                                    <Grid>
                                    
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                    
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                    
                                        <local:BorderTag Grid.Row="0" Grid.Column="0" Background="{StaticResource Background}">
                                            <TextBlock Text="{Binding Time}" FontWeight="Bold"/>
                                        </local:BorderTag>
                                    
                                        <local:BorderTag Grid.Row="0" Grid.Column="1" DataContext="{Binding Level}" Background="{local:ResourceBinding Converter={StaticResource BrushOpacityKeyConverter}}">
                                            <Border.Style>
                                                <Style TargetType="local:BorderTag" BasedOn="{StaticResource {x:Type local:BorderTag}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding}" Value="Null"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock Text="{Binding}"/>
                                        </local:BorderTag>
                                        
                                        <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Module}"/>
                                    
                                        <TextBox Grid.Row="1" Grid.Column="0" Margin="0,3,0,0" Grid.ColumnSpan="{StaticResource FullSpan}"
                                                Text="{Binding Content}" FontFamily="{StaticResource MonoFont}" TextWrapping="Wrap"
                                                Background="Transparent" IsReadOnly="True" BorderThickness="0">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox"/>
                                            </TextBox.Style>
                                        </TextBox>
                                        
                                    </Grid>
                                    
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        
                    </ItemsControl>
                </local:BorderCard>
                
            </DockPanel>
        
        </DockPanel>
        
    </DockPanel>
    
</local:GeneralWindow>
    